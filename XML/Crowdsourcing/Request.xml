<businessclass
        version="1.0"
        xmlns="http://www.w3.org/2005/07/scxml"
        name="Request"
        initial="Initial">

    <datamodel>
        <!--继承自父业务类的数据模型不需要在这里重新进行定义-->
        <data id="employer" expr=""></data>
        <data id="taskName" expr=""></data>
        <data id="taskDescription" expr=""></data>
        <data id="judgeCount" expr="3"></data>
        <data id="decomposeCount" expr="3"></data>
        <data id="decomposeVoteCount" expr="3"></data>
        <data id="solveCount" expr="3"></data>
        <data id="solveVoteCount" expr="3"></data>
    </datamodel>

    <tasks>
        <task id="edit" name="editTask" brole="publisher">
            <principle method="Allocate" distributor="ShortestQueue"></principle>
            <callback on="complete" event="submit"></callback>
            <documentation>Edit task let the publisher publish a new crowdsourcing task.</documentation>
        </task>
    </tasks>

    <!-- 生命周期模型 -->

    <!-- 初始状态：publisher一登录系统就进入到初始状态 -->
    <state id="Initial">
        <onentry>
            <log label="init" expr="'entry Initial state'"/>
        </onentry>
        <!-- publisher点击发布任务按钮产生publish事件，分配编辑众包详情任务 -->
        <transition event="publish" target="Editing">
            <call name="editTask"></call>
        </transition>

        <transition event="cancel" target="Final"></transition>
        <onexit>
            <log label="init" expr="'exit Initial state'"/>
        </onexit>
    </state>

    <state id="Editing">
        <onentry>
            <log label="editing" expr="'entry Editing state'"/>
        </onentry>
        <!-- publisher点击提交按钮产生submit事件，创建一个具体执行众包任务的BO -->
        <transition event="submit" target="Waiting">
            <!--1.通过param孩子元素指定传给外部任务的参数，location对应于datamodel里面的data的location，从location中获得data的value；
                2.也可以通过namelist属性指定传给外部任务的参数，其中namelist的值对应于datamodel中的data的ID值，以空格隔开多个ID值；
                3.param和namelist不能同时指定
                4.namelist="employer taskName taskDescription judgeCount decomposeCount decomposeVoteCount solveCount solveVoteCount"-->
            <newbo src="Crowdsourcing.xml" instances="1"  idExpr="SubPrefix + _instanceIndex">
                <param name="employer" expr="employer"></param>
                <param name="taskName" expr="taskName"></param>
                <param name="taskDescription" expr="taskDescription"></param>
                <param name="judgeCount" expr="judgeCount"></param>
                <param name="decomposeCount" expr="decomposeCount"></param>
                <param name="decomposeVoteCount" expr=" decomposeVoteCount"></param>
                <param name="solveCount" expr="solveCount"></param>
                <param name="solveVoteCount" expr="solveVoteCount"></param>
            </newbo>
        </transition>
        <onexit>
            <log label="editing" expr="'exit Editing state'"/>
        </onexit>
    </state>

    <state id="Waiting">
        <onentry>
            <log label="waiting" expr="'entry Waiting state'"/>
        </onentry>
        <transition event="Crowdsourcing.finish" target="Final"></transition>
        <onexit>
            <log label="waiting" expr="'exit Waiting state'"/>
        </onexit>
    </state>

    <final id="Final">
        <onentry>
            <log label="final" expr="'entry Final state'"/>
        </onentry>
        <onexit>
            <log label="final" expr="'exit Final state'"/>
        </onexit>
    </final>
</businessclass>